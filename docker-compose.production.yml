services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: pricing-calculator-backend
    environment:
      - NODE_ENV=production
      - PORT=5001
      - HOST=0.0.0.0
      - DATABASE_PATH=./pricing.db
      - FRONTEND_URL=http://luke.febos.local/pricingapp
      - ALLOWED_ORIGINS=http://luke.febos.local
      - JWT_SECRET=pricing-calculator-jwt-secret-2025-production
      - JWT_REFRESH_SECRET=pricing-calculator-refresh-secret-2025-production
      - LOG_LEVEL=info
    volumes:
      - pricing_data:/app/data
      - pricing_logs:/app/logs
    networks:
      - pricing_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:5001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://backend:5001/api
        - PUBLIC_URL=/pricingapp
    environment:
      - PUBLIC_URL=/pricingapp
    container_name: pricing-calculator-frontend
    volumes:
      - pricing_static:/usr/share/nginx/html/static
    networks:
      - pricing_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: pricing-calculator-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx-production.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - pricing_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/pricingapp/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pricing_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/docker/pricingapp_data/database
  pricing_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/docker/pricingapp_data/logs
  pricing_static:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/docker/pricingapp_data/static

networks:
  pricing_network:
    driver: bridge
