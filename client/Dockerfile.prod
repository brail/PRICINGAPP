# Multi-stage build per ottimizzazione
FROM node:18-alpine AS builder

WORKDIR /app

# Copia package files
COPY package*.json ./
RUN npm ci --silent

# Copia codice sorgente
COPY . .

# Build dell'applicazione
ARG REACT_APP_API_URL
ARG PUBLIC_URL
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV PUBLIC_URL=$PUBLIC_URL

RUN npm run build

# Production stage con Nginx
FROM nginx:alpine AS production

# Installa dumb-init
RUN apk add --no-cache dumb-init

# Copia build files
COPY --from=builder /app/build /usr/share/nginx/html

# Copia configurazione Nginx ottimizzata
COPY nginx.conf /etc/nginx/nginx.conf

# Crea utente non-root
RUN addgroup -g 1001 -S nginx
RUN adduser -S nginx -u 1001

# Crea directory per logs
RUN mkdir -p /var/log/nginx && chown -R nginx:nginx /var/log/nginx

# Esponi porta
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/health || exit 1

# Avvia con dumb-init
USER nginx
ENTRYPOINT ["dumb-init", "--"]
CMD ["nginx", "-g", "daemon off;"]
